{"version":3,"sources":["views/login/login.js"],"names":["LoginScreen","state","username","password","handleChange","e","target","name","value","setState","popUp","msg","alert","validateForm","a","Promise","reject","resolve","onSubmit","preventDefault","service","get","environment","login","user","Array","isArray","isValid","find","val","console","log","props","success","Error","message","className","this","htmlFor","type","id","placeholder","onChange","onClick","React","Component","mapDispatchToProps","loginAction","connect"],"mappings":"kPAKMA,E,4MACJC,MAAQ,CACNC,SAAU,GACVC,SAAU,I,EAGZC,aAAe,SAACC,GAAO,IAAD,EACIA,EAAEC,OAAlBC,EADY,EACZA,KAAMC,EADM,EACNA,MACd,EAAKC,SAAL,eAAiBF,EAAOC,K,EAG1BE,MAAQ,SAACC,GAAD,OAASC,MAAMD,I,EAEvBE,a,uCAAe,WAAOX,EAAUC,GAAjB,SAAAW,EAAA,yDACRZ,GAAaC,EADL,yCAEJY,QAAQC,OAAO,gCAFX,OAIbD,QAAQE,QAAQ,WAJH,2C,0DAOfC,S,uCAAW,WAAOb,GAAP,uBAAAS,EAAA,6DACTT,EAAEc,iBADO,EAGsB,EAAKlB,MAA5BC,EAHC,EAGDA,SAAUC,EAHT,EAGSA,SAHT,kBAMD,EAAKU,aAAaX,EAAUC,GAN3B,uBAOYiB,IAAQC,IAAIC,UAAYC,OAPpC,UAODC,EAPC,QAQHC,MAAMC,QAAQF,GARX,oBASCG,EAAUH,EAAKI,MACnB,SAACC,GAAD,OACEA,EAAI3B,WAAa,EAAKD,MAAMC,UAC5B2B,EAAI1B,WAAa,EAAKF,MAAME,YAEhC2B,QAAQC,IAAIJ,IACRA,EAfC,iBAgBH,EAAKK,MAAMT,MAAM,CAAEC,KAAMtB,EAAU+B,SAAS,IAhBzC,8BAmBG,IAAIC,MAAM,wBAnBb,sCAsBC,IAAIA,MAAM,wBAtBX,0DAyBP,EAAKxB,MAAM,KAAEyB,SAzBN,0D,6GA6BT,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,gCAAd,UACA,0BAAMA,UAAU,SAASlB,SAAUmB,KAAKnB,UACtC,yBAAKkB,UAAU,cACb,2BAAOE,QAAQ,YAAf,YACA,2BACEF,UAAU,wBACVG,KAAK,OACLhC,KAAK,WACLiC,GAAG,WACHC,YAAY,WACZC,SAAUL,KAAKjC,aACfI,MAAO6B,KAAKpC,MAAMC,YAGtB,yBAAKkC,UAAU,cACb,2BAAOE,QAAQ,YAAf,YACA,2BACEF,UAAU,wBACVG,KAAK,WACLhC,KAAK,WACLiC,GAAG,WACHC,YAAY,WACZC,SAAUL,KAAKjC,aACfI,MAAO6B,KAAKpC,MAAME,YAGtB,yBAAKiC,UAAU,sBACb,2BACEG,KAAK,SACLhC,KAAK,SACL6B,UAAU,0BACVO,QAASN,KAAKnB,SACdV,MAAO,mB,GArFCoC,IAAMC,WAoG1BC,EAAqB,CACzBvB,MAAOwB,IAAYxB,OAGNyB,uBARS,SAAC/C,GACvB,OAAOA,EAAMsB,QAOyBuB,EAAzBE,CAA6ChD","file":"static/js/4.f09fd3c5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport service from \"../../services/service\";\nimport { loginAction } from \"../../store/login/login.action\";\nimport environment from \"../../index\";\nclass LoginScreen extends React.Component {\n  state = {\n    username: \"\",\n    password: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  popUp = (msg) => alert(msg);\n\n  validateForm = async (username, password) => {\n    if (!username || !password) {\n      return Promise.reject(\"all field must be filled...\");\n    }\n    Promise.resolve(\"success\");\n  };\n\n  onSubmit = async (e) => {\n    e.preventDefault();\n\n    const { username, password } = this.state;\n\n    try {\n      await this.validateForm(username, password);\n      const user = await service.get(environment.login);\n      if (Array.isArray(user)) {\n        const isValid = user.find(\n          (val) =>\n            val.username === this.state.username &&\n            val.password === this.state.password\n        );\n        console.log(isValid);\n        if (isValid) {\n          this.props.login({ user: username, success: true });\n          //this.props.history.push(\"/main\");\n        } else {\n          throw new Error(\"Wrong credentials...\");\n        }\n      } else {\n        throw new Error(\"Something went wrong\");\n      }\n    } catch (e) {\n      this.popUp(e.message);\n    }\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row d-flex justify-content-center align-items-center vh-100 \">\n          <div className=\"col-xs-4 col-sm-6\">\n            <h2 className=\"text-default text-center p-3\">Encora</h2>\n            <form className=\"myForm\" onSubmit={this.onSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <input\n                  className=\"form-control input-lg\"\n                  type=\"text\"\n                  name=\"username\"\n                  id=\"username\"\n                  placeholder=\"username\"\n                  onChange={this.handleChange}\n                  value={this.state.username}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  className=\"form-control input-lg\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"password\"\n                  onChange={this.handleChange}\n                  value={this.state.password}\n                />\n              </div>\n              <div className=\"form-group d-flex \">\n                <input\n                  type=\"submit\"\n                  name=\"submit\"\n                  className=\"btn btn-default btn-lg \"\n                  onClick={this.onSubmit}\n                  value={\"Login\"}\n                />\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return state.login;\n};\n\nconst mapDispatchToProps = {\n  login: loginAction.login,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginScreen);\n"],"sourceRoot":""}
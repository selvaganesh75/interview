{"version":3,"sources":["environments/base.js","environments/production.js","store/main/main.constant.js","store/login/login.action.js","store/main/main.action.js","polyfill.js","routes.js","Routing/private-route.js","auth/auth.js","App.js","serviceWorker.js","index.js","utils/utils.js","services/service.js","store/sagas.js","store/login/login.reducer.js","store/main/main.reducer.js","store/rootReducer.js","store/store.js","store/login/login.constant.js"],"names":["obj","env","basePath","login","intervals","logout","isProduction","isDevelopment","mainConstant","ASYNC_ADD_NOTE","ADD_NOTE_REQUEST","ADD_NOTE_SUCCESS","ADD_NOTE_FAILURE","ASYNC_REMOVE_NOTE","REMOVE_NOTE_REQUEST","REMOVE_NOTE_SUCCESS","REMOVE_NOTE_FAILURE","loginSaga","loginAction","data","type","LoginConstant","ASYNC_LOGIN","success","failure","error","LOGIN_FAILURE","msg","LOGIN_SUCCESS","payload","user","console","log","put","history","push","Error","message","takeLatest","addNote","removeNote","mainSaga","mainAction","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","prototype","Event","routes","path","exact","name","component","React","lazy","PrivateRoute","Component","rest","render","props","isUser","userData","store","getState","Authorization","authHeader","to","pathname","Login","NotFound","App","Suspense","fallback","className","map","route","index","key","Boolean","location","hostname","match","environment","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","buildErrFromResponse","response","a","Promise","resolve","reject","errors","errorMsg","Array","isArray","forEach","val","param","status","statusText","service","handleError","errorResponse","redirectTo","get","options","headers","patch","header","request","method","url","responseType","post","delete","axios","create","interceptors","use","this","handleSuccess","rootSaga","all","initialState","loginError","loginSuccess","notes","appReducer","combineReducers","routing","routerReducer","state","action","newState","loginConstant","main","rootReducer","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","run","browserHistory","createBrowserHistory","basename","syncHistoryWithStore"],"mappings":"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","file":"static/js/main.7e57353c.chunk.js","sourcesContent":["// default environment setup\r\nexport default function(obj) {\r\n  //const { misconnection,performance} = obj;\r\n  return {\r\n    intervals: {\r\n      logout: 3600 // 1 hour in seconds\r\n    },\r\n\r\n    isProduction: true,\r\n    isDevelopment: false,\r\n    ...obj\r\n  };\r\n}\r\n","import environment from \"./base\";\r\n\r\n// production backend url\r\n\r\nexport const obj = {\r\n   basePath: \"interview/\",\r\n  login: \"https://selvaganesh75.github.io/interview/user.json\",\r\n};\r\nconst env = environment(obj);\r\n\r\nexport default {\r\n  ...env,\r\n  isProduction: true,\r\n  isDevelopment: false,\r\n};\r\n","const mainConstant = {\n  ASYNC_ADD_NOTE: \"ASYNC_ADD_NOTE\",\n  ADD_NOTE_REQUEST: \"ADD_NOTE_REQUEST\",\n  ADD_NOTE_SUCCESS: \"ADD_NOTE_SUCCESS\",\n  ADD_NOTE_FAILURE: \"ADD_NOTE_FAILURE\",\n  ASYNC_REMOVE_NOTE: \"ASYNC_REMOVE_NOTE\",\n  REMOVE_NOTE_REQUEST: \"REMOVE_NOTE_REQUEST\",\n  REMOVE_NOTE_SUCCESS: \"REMOVE_NOTE_SUCCESS\",\n  REMOVE_NOTE_FAILURE: \"REMOVE_NOTE_FAILURE\",\n};\n\nexport default mainConstant;\n","import { put, call, takeLatest } from \"redux-saga/effects\";\nimport service from \"../../services/service\";\nimport { history } from \"../store\";\nimport LoginConstant from \"./login.constant\";\n\nexport const loginAction = {\n  login: (data) => {\n    return { type: LoginConstant.ASYNC_LOGIN, data };\n  },\n};\n\nfunction* login({ data }) {\n  const { user } = data;\n  function success(msg) {\n    return { type: LoginConstant.LOGIN_SUCCESS, payload: msg };\n  }\n  function failure(error) {\n    return { type: LoginConstant.LOGIN_FAILURE, error };\n  }\n  try {\n    if (data.success) {\n      console.log(data);\n      yield put(success({ user }));\n      history.push(\"main\");\n    } else throw new Error(\"Login Failure\");\n  } catch (e) {\n    yield put(failure(e.message));\n  }\n}\n\nexport function* loginSaga() {\n  yield takeLatest(LoginConstant.ASYNC_LOGIN, login);\n}\n","import { put, call, takeLatest } from \"redux-saga/effects\";\nimport mainConstant from \"./main.constant\";\n\nexport const mainAction = {\n  addNote: (data) => {\n    return { type: mainConstant.ASYNC_ADD_NOTE, data };\n  },\n  removeNote: (data) => ({ type: mainConstant.ASYNC_REMOVE_NOTE, data }),\n};\n\nfunction* addNote({ data }) {\n  function success(msg) {\n    return { type: mainConstant.ADD_NOTE_SUCCESS, payload: msg };\n  }\n  try {\n    yield put(success(data));\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* removeNote({ data }) {\n  function success(msg) {\n    return { type: mainConstant.REMOVE_NOTE_SUCCESS, payload: msg };\n  }\n  function failure(error) {\n    return { type: mainConstant.REMOVE_NOTE_FAILURE, error };\n  }\n  try {\n    yield put(success(data));\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport function* mainSaga() {\n  yield takeLatest(mainConstant.ASYNC_ADD_NOTE, addNote);\n  yield takeLatest(mainConstant.ASYNC_REMOVE_NOTE, removeNote);\n}\n","/*\n* required polyfills\n*/\nimport \"core-js\";\nimport 'core-js/features/set/map';\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol'\n// import 'core-js/es6/object'\n// import 'core-js/es6/function'\n// import 'core-js/es6/parse-int'\n// import 'core-js/es6/parse-float'\n// import 'core-js/es6/number'\n// import 'core-js/es6/math'\n// import 'core-js/es6/string'\n// import 'core-js/es6/date'\n// import 'core-js/es6/array'\n// import 'core-js/es6/regexp'\n// import 'core-js/es6/map'\n// import 'core-js/es6/weak-map'\n// import 'core-js/es6/set'\n// import 'core-js/es7/object'\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect'\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\n// import 'core-js/es7/reflect'\n\n// CustomEvent() constructor functionality in IE9, IE10, IE11\n(function () {\n\n  if ( typeof window.CustomEvent === \"function\" ) return false\n\n  function CustomEvent ( event, params ) {\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\n    var evt = document.createEvent( 'CustomEvent' )\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail )\n    return evt\n  }\n\n  CustomEvent.prototype = window.Event.prototype\n\n  window.CustomEvent = CustomEvent\n})()\n","import React from \"react\";\nconst MainPage = React.lazy(() => import(\"./views/mainPage\"));\n\nconst routes = [\n  { path: \"/\", exact: true, name: \"default\" },\n  { path: \"/main\", exact: true, name: \"Login Screen\", component: MainPage },\n];\n\nexport default routes;\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { authHeader } from \"../auth/auth\";\r\n\r\n//children={(prop:any) => validRoute(route) }\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        const isUser = authHeader();\r\n        return isUser && isUser.Authorization ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={{ pathname: \"/login\" }} />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import store from \"../store/store\";\r\n\r\nexport function authHeader() {\r\n  // return authorization header with basic auth credentials\r\n  const { userData } = store.getState().login;\r\n  if (userData && userData.user) {\r\n    return { Authorization: \"success\" };\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { Route, Switch, Router } from \"react-router-dom\";\nimport \"./App.scss\";\nimport routes from \"./routes\";\nimport { PrivateRoute } from \"./Routing/private-route\";\nimport { history } from \"./store/store\";\nconst loading = () => (\n  <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>\n);\n\n// Pages\nconst Login = React.lazy(() => import(\"./views/login/login\"));\nconst NotFound = React.lazy(() => import(\"./views/404/index\"));\n\nclass App extends Component {\n  render() {\n    return (\n      <Router history={history}>\n        <React.Suspense fallback={loading()}>\n          <Switch>\n            <Route\n              path=\"/login\"\n              exact\n              render={(props) => <Login {...props} />}\n            />\n            {routes.map((route, index) => (\n              <PrivateRoute key={index} {...route} />\n            ))}\n            <Route\n              name=\"Page 404\"\n              render={(props) => <NotFound {...props} />}\n            />\n          </Switch>\n        </React.Suspense>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"react-app-polyfill/ie9\"; // For IE 9-11 support\nimport \"react-app-polyfill/stable\";\n// import 'react-app-polyfill/ie11'; // For IE 11 support\nimport \"./polyfill\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport environment from \"environment\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store/store\";\n\nexport default environment;\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const buildErrFromResponse = async (response) => {\n  return new Promise((resolve, reject) => {\n    if (!response) reject({ message: \"Something went wrong\" });\n    if (response && response.errors) {\n      const errorMsg = response.errors;\n      let errors = \"\";\n      if (Array.isArray(errorMsg.msg)) {\n        errorMsg.msg.forEach((val) => {\n          const param = val.param ? val.param + \":\" : \"\";\n          errors += `${param} ${val.msg}, \\n`;\n        });\n      } else {\n        const param = errorMsg.param ? errorMsg.param + \":\" : \"\";\n        errors = param + errorMsg.msg;\n      }\n      reject({ message: errors });\n    }\n    if (response) resolve(response);\n    if (response === null || response === undefined)\n      reject({ message: \"Something went wrong\" });\n    if (response.status > 399)\n      reject({ message: response.statusText || \"Something went wrong\" });\n    resolve({});\n  });\n};\n","import axios from \"axios\";\r\nimport { buildErrFromResponse } from \"../utils/utils\";\r\nimport store, { history } from \"../store/store\";\r\nclass Service {\r\n  service;\r\n  constructor() {\r\n    const service = axios.create({\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    service.interceptors.response.use(this.handleSuccess, this.handleError);\r\n    this.service = service;\r\n  }\r\n\r\n  handleSuccess(response) {\r\n    return response;\r\n  }\r\n\r\n  handleError = (error) => {\r\n    const errorResponse = error.response;\r\n    console.log(error);\r\n    return buildErrFromResponse(errorResponse.data);\r\n  };\r\n\r\n  redirectTo = (document, path) => {\r\n    document.location = path;\r\n  };\r\n\r\n  get = (path, options = { headers: {} }) => {\r\n    return this.service.get(path, options).then((response) => response.data);\r\n  };\r\n\r\n  patch = (path, payload, header) => {\r\n    return this.service\r\n      .request({\r\n        method: \"PATCH\",\r\n        url: path,\r\n        responseType: \"json\",\r\n        data: payload,\r\n        headers: header,\r\n      })\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  };\r\n\r\n  post = (path, payload, header) => {\r\n    return this.service\r\n      .request({\r\n        method: \"POST\",\r\n        url: path,\r\n        responseType: \"json\",\r\n        data: payload,\r\n        headers: header,\r\n      })\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  };\r\n\r\n  put = (path, payload, header) => {\r\n    return this.service\r\n      .request({\r\n        method: \"PUT\",\r\n        url: path,\r\n        responseType: \"json\",\r\n        data: payload,\r\n        headers: header,\r\n      })\r\n      .then((response) => response.data);\r\n  };\r\n\r\n  delete = (path, payload, header) => {\r\n    return this.service\r\n      .request({\r\n        method: \"DELETE\",\r\n        url: path,\r\n        responseType: \"json\",\r\n        data: payload,\r\n        headers: header,\r\n      })\r\n      .then((response) => response.data);\r\n  };\r\n}\r\n\r\nconst service = new Service();\r\n\r\nexport default service;\r\n","import { all } from \"redux-saga/effects\";\nimport { loginSaga } from \"./login/login.action\";\nimport { mainSaga } from \"./main/main.action\";\n\nexport default function* rootSaga() {\n  yield all([loginSaga(), mainSaga()]);\n}\n","import loginConstant from \"./login.constant\";\n\nconst initialState = {\n  loginError: false,\n  loginSuccess: false,\n  userData: {},\n};\n\nexport default function loginReducer(state = initialState, action) {\n  const newState = { ...state };\n\n  if (action.type === loginConstant.LOGIN_FAILURE) {\n    newState.loginError = action.payload;\n    newState.loginSuccess = false;\n    newState.userData = {};\n  }\n  if (action.type === loginConstant.LOGIN_SUCCESS) {\n    newState.loginSuccess = true;\n    newState.loginError = false;\n    newState.userData = action.payload;\n  }\n\n  return newState;\n}\n","import mainConstant from \"./main.constant\";\n\nconst initialState = {\n  notes: [],\n};\n\nexport default function mainReducer(state = initialState, action) {\n  const newState = { ...state };\n\n  if (action.type === mainConstant.REMOVE_NOTE_SUCCESS) {\n    newState.notes = action.payload;\n  }\n  if (action.type === mainConstant.ADD_NOTE_SUCCESS) {\n    newState.notes = action.payload;\n  }\n\n  return newState;\n}\n","import { combineReducers } from \"redux\";\nimport { routerReducer } from \"react-router-redux\";\nimport loginReducer from \"./login/login.reducer\";\nimport mainReducer from \"./main/main.reducer\";\n\nconst appReducer = combineReducers({\n  routing: routerReducer,\n  login: loginReducer,\n  main: mainReducer,\n});\n\nconst rootReducer = (state, action) => {\n  if (action.type === \"LOGOUT\") {\n    state = undefined;\n  }\n\n  return appReducer(state, action);\n};\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { createBrowserHistory } from \"history\";\nimport { syncHistoryWithStore } from \"react-router-redux\";\nimport rootSaga from \"./sagas\";\nimport rootReducer from \"./rootReducer\";\nimport environment from \"environment\";\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\n\nconst browserHistory = createBrowserHistory({\n  basename: \"interview/\" || process.env.REACT_APP_ROUTER_BASE || environment.basePath || \"\"\n});\n\nexport const history = syncHistoryWithStore(browserHistory, store);\n\nexport default store;\n","const LoginConstant = {\n  ASYNC_LOGIN: \"ASYNC_LOGIN\",\n  LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\n  LOGIN_FAILURE: \"LOGIN_FAILURE\",\n};\n\nexport default LoginConstant;\n"],"sourceRoot":""}